# Configuración de build system para empaquetar con setuptools.
[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

# Metadatos y dependencias principales del proyecto FastAPI.
[project]
name = "chequecomemos-api"
version = "0.1.0"
description = "API FastAPI para el planificador familiar de comidas."
readme = "README.md"
requires-python = ">=3.12"
authors = [{ name = "Equipo Planificador" }]
dependencies = [
  "fastapi>=0.110,<1.0",
  "uvicorn[standard]>=0.24,<1.0",
  "pydantic>=2.5,<3.0",
]

# Paquete de dependencias para entorno de desarrollo y herramientas auxiliares.
[project.optional-dependencies]
dev = [
  "pytest>=7.4,<9.0",
  "pytest-asyncio>=0.21,<0.25",
  "httpx>=0.25,<0.28",
  "coverage[toml]>=7.4,<8.0",
  "ruff>=0.3.0",
  "black>=23.12",
  "commitizen>=3.14,<4.0",
]

# Convenciones de formato aplicadas por Black.
[tool.black]
line-length = 88
target-version = ["py312"]
include = "\\.pyi?$"

# Configuración general de linting con Ruff.
[tool.ruff]
line-length = 88
src = ["app", "tests"]
target-version = "py312"
select = ["E", "F", "I", "UP", "B"]
ignore = ["E203", "E266", "E501"]

# Exclusiones puntuales de reglas Ruff específicas para tests.
[tool.ruff.per-file-ignores]
"tests/*" = ["S101"]

# Parametrización de orden de imports mediante Ruff/isort.
[tool.ruff.lint.isort]
known-first-party = ["app"]

# Preferencias para la ejecución de Pytest.
[tool.pytest.ini_options]
addopts = "--maxfail=1 --disable-warnings"
testpaths = ["tests"]

# Cobertura: opciones de ejecución y reporte.
[tool.coverage.run]
branch = true
source = ["app"]

[tool.coverage.report]
show_missing = true
skip_covered = true

# Convenciones y versionado administrado por Commitizen.
[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "$version-alpha"
version_scheme = "semver2"
version = "0.0.1"
update_changelog_on_bump = true
major_version_zero = true
